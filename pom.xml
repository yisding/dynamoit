<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This file is part of DynamoIt.
  ~
  ~     DynamoIt is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     (at your option) any later version.
  ~
  ~     DynamoIt is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with DynamoIt.  If not, see <https://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ua.org.java</groupId>
    <artifactId>DynamoIt</artifactId>
    <version>1.2.1</version>
    <packaging>jar</packaging>

    <description>
        DynamoDB is a graphical client for working with AWS Dynamo DB
    </description>

    <url>https://github.com/bykka/dynamoit</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <dagger.version>2.56.2</dagger.version>
        <javafx.version>24.0.1</javafx.version>
        <aws.sdk.version>1.12.787</aws.sdk.version>
        <main.class>ua.org.java.dynamoit.Launcher</main.class>
        <fatJar.dir>${project.build.directory}/fatJar/</fatJar.dir>
        <destination.dir>${project.build.directory}/${project.name}</destination.dir>
        <destination.name>${project.name}</destination.name>
        <icon/><!-- defined in the profile -->
        
        <!-- TestFX/JavaFX Test Configuration Properties (can be overridden) -->
        <testfx.headless>true</testfx.headless>
        <prism.order>sw</prism.order>
        <java.awt.headless>true</java.awt.headless>
        <glass.platform>Monocle</glass.platform>
        <monocle.platform>Headless</monocle.platform>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.dagger</groupId>
                            <artifactId>dagger-compiler</artifactId>
                            <version>${dagger.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <!-- Allow JUnit to access the jdk classes -->
                    <argLine>
                        --add-opens java.base/java.lang=ALL-UNNAMED
                        --add-opens java.base/java.util=ALL-UNNAMED
                        --add-opens java.base/java.util.concurrent=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
                        --add-opens javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
                        --add-opens javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED
                        --enable-native-access=ALL-UNNAMED
                        -Dtestfx.headless=${testfx.headless}
                        -Dprism.order=${prism.order}
                        -Djava.awt.headless=${java.awt.headless}
                        -Dglass.platform=${glass.platform}
                        -Dmonocle.platform=${monocle.platform}
                    </argLine>
                    <!-- Exclude E2E tests from regular test runs -->
                    <excludes>
                        <exclude>**/e2e/**/*E2ETest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Specification-Title>${project.artifactId}</Specification-Title>
                                        <Specification-Version>${project.version}</Specification-Version>
                                        <Implementation-Title>${project.artifactId}</Implementation-Title>
                                        <Implementation-Version>${project.version}</Implementation-Version>
                                        <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                                        <Main-Class>${main.class}</Main-Class>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                            <outputFile>${project.build.directory}/fatJar/${project.build.finalName}.jar</outputFile>
                            <dependencyReducedPomLocation>
                                ${project.build.directory}/dependency-reduced-pom.xml
                            </dependencyReducedPomLocation>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>package</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>create-package</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <executable>jpackage</executable>
                                    <arguments>
                                        <argument>--verbose</argument>
                                        <argument>--input</argument>
                                        <argument>${fatJar.dir}</argument>
                                        <argument>--name</argument>
                                        <argument>${project.name}</argument>
                                        <argument>--main-class</argument>
                                        <argument>${main.class}</argument>
                                        <argument>--main-jar</argument>
                                        <argument>${project.build.finalName}.jar</argument>
                                        <argument>--type</argument>
                                        <argument>app-image</argument>
                                        <argument>--dest</argument>
                                        <argument>${destination.dir}</argument>
                                        <argument>--copyright</argument>
                                        <argument>GPLv3</argument>
                                        <argument>--vendor</argument>
                                        <argument>Pavlo Iatsiuk</argument>
                                        <argument>--icon</argument>
                                        <argument>${project.basedir}/src/main/resources/icons/${icon}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>tar</executable>
                                    <arguments>
                                        <argument>-czf</argument>
                                        <argument>${project.build.directory}/${project.name}.tar.gz</argument>
                                        <argument>-C</argument>
                                        <argument>${destination.dir}</argument>
                                        <argument>${destination.name}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <icon>dynamite.ico</icon>
            </properties>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <icon>dynamite.png</icon>
            </properties>
        </profile>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <icon>dynamite.icns</icon>
                <destination.name>${project.name}.app</destination.name>
            </properties>
        </profile>
        <profile>
            <id>e2e-parallel</id>
            <activation>
                <property>
                    <name>e2e.parallel</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <parallel>classes</parallel>
                            <forkCount>4</forkCount>
                            <reuseForks>true</reuseForks>
                            <argLine>
                                --add-opens java.base/java.lang=ALL-UNNAMED
                                --add-opens java.base/java.util=ALL-UNNAMED
                                --add-opens java.base/java.util.concurrent=ALL-UNNAMED
                                --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
                                --add-opens javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
                                --add-opens javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED
                                --enable-native-access=ALL-UNNAMED
                                -Dtestfx.headless=${testfx.headless}
                                -Dprism.order=${prism.order}
                                -Djava.awt.headless=${java.awt.headless}
                                -Dglass.platform=${glass.platform}
                                -Dmonocle.platform=${monocle.platform}
                            </argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Profile for running TestFX tests in visible mode -->
        <profile>
            <id>testfx-visible</id>
            <properties>
                <testfx.headless>false</testfx.headless>
                <prism.order>d3d,es2,sw</prism.order>
                <java.awt.headless>false</java.awt.headless>
                <!-- Don't set glass.platform, let JavaFX choose -->
                <glass.platform></glass.platform>
                <monocle.platform></monocle.platform>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <!-- openjfx -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <!-- Just for ScenicView -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <!-- aws sdk -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-dynamodb</artifactId>
            <version>${aws.sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-config</artifactId>
            <version>${aws.sdk.version}</version>
        </dependency>
        <!-- dagger -->
        <dependency>
            <groupId>com.google.dagger</groupId>
            <artifactId>dagger</artifactId>
            <version>${dagger.version}</version>
        </dependency>
        <!-- richtextfx -->
        <dependency>
            <groupId>org.fxmisc.richtext</groupId>
            <artifactId>richtextfx</artifactId>
            <version>0.11.5</version>
        </dependency>
        <!-- rx java -->
        <dependency>
            <groupId>io.reactivex.rxjava2</groupId>
            <artifactId>rxjava</artifactId>
            <version>2.2.21</version>
        </dependency>
        <dependency>
            <groupId>io.reactivex.rxjava2</groupId>
            <artifactId>rxjavafx</artifactId>
            <version>2.11.0-RC16</version>
        </dependency>
        <dependency>
            <groupId>io.github.java-diff-utils</groupId>
            <artifactId>java-diff-utils</artifactId>
            <version>4.16</version>
        </dependency>
        <dependency>
            <groupId>io.github.mkpaz</groupId>
            <artifactId>atlantafx-base</artifactId>
            <version>2.1.0</version>
        </dependency>
        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>5.6.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>2.0.9</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-easymock</artifactId>
            <version>2.0.9</version>
            <scope>test</scope>
        </dependency>
        
        <!-- TestFX for UI testing -->
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-core</artifactId>
            <version>4.0.18</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>testfx-junit5</artifactId>
            <version>4.0.18</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Monocle for headless testing -->
        <dependency>
            <groupId>org.testfx</groupId>
            <artifactId>openjfx-monocle</artifactId>
            <version>21.0.2</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Testcontainers for DynamoDB Local -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>1.21.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.21.3</version>
            <scope>test</scope>
        </dependency>
        
        <!-- JUnit 5 (upgrade from JUnit 4) -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.11.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.11.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.11.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <version>1.11.4</version>
            <scope>test</scope>
        </dependency>
        
        <!-- AssertJ for better assertions -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.26.3</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Jackson annotations for AWS SDK compatibility -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.19.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.19.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.19.1</version>
        </dependency>


    </dependencies>

</project>
